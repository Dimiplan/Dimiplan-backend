openapi: 3.1.1
info:
  title: Dimiplan API
  description: Dimiplan 서비스를 위한 API 명세서
  version: 1.0.0
  contact:
    name: Dimiplan 개발팀
servers:
  - url: https://api.dimiplan.com
    description: 운영 서버
  - url: https://api-dev.dimiplan.com
    description: 개발 서버

tags:
  - name: 인증
    description: 사용자 인증 관련 API
  - name: 사용자
    description: 사용자 정보 관련 API
  - name: 플래너
    description: 플래너 관리 관련 API
  - name: 태스크
    description: 태스크 관리 관련 API
  - name: 인공지능
    description: AI 기능 관련 API
  - name: 레거시
    description: 곧 제거될 API

paths:
  # 인증 API
  /auth/google:
    get:
      tags:
        - 인증
      summary: 구글 로그인
      description: 구글 로그인 페이지로 리다이렉트됩니다.
      responses:
        "302":
          description: 구글 로그인 페이지로 리다이렉트
          headers:
            Location:
              schema:
                type: string
              description: 구글 로그인 URL

  /auth/google/callback:
    get:
      tags:
        - 인증
      summary: 구글 로그인 콜백
      description: 구글 로그인 후 콜백 처리를 담당합니다.
      parameters:
        - name: code
          in: query
          description: 구글 인증 코드
          required: true
          schema:
            type: string
      responses:
        "302":
          description: 로그인 결과에 따른 리다이렉트
          headers:
            Location:
              schema:
                type: string
              description: 리다이렉트 URL
              examples:
                login_fail:
                  summary: 로그인 실패
                  value: "{FRONT_HOST}/login/fail"
                signup:
                  summary: 사용자 미등록
                  value: "{FRONT_HOST}/signup"
                main:
                  summary: 로그인 완료
                  value: "{FRONT_HOST}"
            Set-Cookie:
              schema:
                type: string
              description: 세션 쿠키 설정 (dimiplan.sid)
              example: dimiplan.sid=s%3A1234abcd.XYZ; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Authentication successful"

  /auth/logout:
    get:
      tags:
        - 인증
      summary: 로그아웃
      description: 로그아웃을 처리합니다.
      responses:
        "200":
          description: 로그아웃 성공
          headers:
            Set-Cookie:
              schema:
                type: string
              description: 세션 쿠키 제거
              example: dimiplan.sid=; Path=/; Expires=Thu, 01 Jan 1970 00:00:00 GMT; HttpOnly
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Logged out"

  /auth/login:
    post:
      tags:
        - 인증
      summary: 모바일 로그인
      description: 모바일 애플리케이션에서 사용자 ID로 직접 로그인
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  description: 사용자 ID
                email:
                  type: string
                  format: email
                  description: 사용자 이메일
                photo:
                  type: string
                  description: 프로필 이미지 URL
                name:
                  type: string
                  description: 사용자 이름
      responses:
        "200":
          description: 로그인 성공
          headers:
            Set-Cookie:
              schema:
                type: string
              description: 세션 쿠키 설정 (dimiplan.sid)
              example: dimiplan.sid=s%3A1234abcd.XYZ; Path=/; HttpOnly
            x-session-id:
              schema:
                type: string
              description: 세션 ID 헤더
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - sessionId
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  sessionId:
                    type: string
                    example: "s%3A1234abcd.XYZ"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # 사용자 API
  /api/user/get:
    get:
      tags:
        - 사용자
      summary: 사용자 정보 조회
      description: 현재 로그인된 사용자의 정보를 조회합니다.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: 사용자 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 사용자를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/user/registered:
    get:
      tags:
        - 사용자
      summary: 사용자 등록 여부 확인
      description: 현재 로그인된 사용자의 등록 여부를 확인합니다.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: 등록 여부 확인 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - registered
                properties:
                  registered:
                    type: boolean
                    description: 사용자 등록 여부
                    example: true
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Not authenticated"

  /api/user/update:
    post:
      tags:
        - 사용자
      summary: 사용자 정보 업데이트
      description: 현재 로그인된 사용자의 정보를 업데이트합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 사용자 이름(15글자 이하)
                grade:
                  type: integer
                  minimum: 1
                  maximum: 3
                  description: 학년(1~3)
                class:
                  type: integer
                  minimum: 1
                  maximum: 6
                  description: 반(1~6)
                email:
                  type: string
                  format: email
                  description: 이메일
                profile_image:
                  type: string
                  format: uri
                  description: 프로필 이미지 URL
      responses:
        "200":
          description: 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Updated"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Bad request"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Not authenticated"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Internal server error"

  # 플래너 API
  /api/planner/add:
    post:
      tags:
        - 플래너
      summary: 플래너 추가
      description: 새 플래너를 추가합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - isDaily
                - from
              properties:
                name:
                  type: string
                  description: 플래너 이름
                  example: "영어 단어장"
                isDaily:
                  type: integer
                  enum: [0, 1]
                  description: 일일 플래너 여부
                  example: 1
                from:
                  type: integer
                  description: 폴더 ID
                  example: 5
      responses:
        "201":
          description: 플래너 추가 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Planner added successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 폴더를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: 동일한 플래너가 이미 존재함
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/planner/rename:
    post:
      tags:
        - 플래너
      summary: 플래너 이름 변경
      description: 플래너의 이름을 변경합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                  description: 플래너 ID
                  example: 10
                name:
                  type: string
                  description: 새 플래너 이름
                  example: "수정된 영어 단어장"
      responses:
        "200":
          description: 플래너 이름 변경 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Planner renamed successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 플래너를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: 동일한 이름의 플래너가 이미 존재함
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/planner/delete:
    post:
      tags:
        - 플래너
      summary: 플래너 삭제
      description: 플래너와 모든 관련 계획을 삭제합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 플래너 ID
                  example: 10
      responses:
        "200":
          description: 플래너 삭제 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Planner and all associated plans deleted successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 플래너를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/planner/getInfo:
    get:
      tags:
        - 플래너
      summary: 플래너 정보 조회
      description: 특정 플래너의 정보를 조회합니다.
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: query
          description: 플래너 ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 플래너 정보 조회 성공
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Planner"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 플래너를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/planner/getPlanners:
    get:
      tags:
        - 플래너
      summary: 폴더 내 플래너 조회
      description: 특정 폴더 내의 플래너 목록을 조회합니다.
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: query
          description: 폴더 ID
          schema:
            type: integer
        - name: from
          in: query
          description: 상위 폴더 ID (id 대신 name과 함께 사용)
          schema:
            type: integer
        - name: name
          in: query
          description: 폴더 이름 (id 대신 from과 함께 사용)
          schema:
            type: string
      responses:
        "200":
          description: 폴더 내 플래너 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Planner"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 플래너를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # 태스크 API
  /api/task/add:
    post:
      tags:
        - 태스크
      summary: 태스크 추가
      description: 새 태스크를 추가합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contents
                - from
              properties:
                contents:
                  type: string
                  description: 태스크 내용
                  example: "수학 문제집 P.45-50 풀기"
                priority:
                  type: integer
                  description: 우선순위
                  default: 1
                  example: 2
                from:
                  type: integer
                  description: 플래너 ID
                  example: 10
                startDate:
                  type: string
                  format: date
                  description: 시작일 (YYYY-MM-DD)
                  example: "2025-04-27"
                dueDate:
                  type: string
                  format: date
                  description: 마감일 (YYYY-MM-DD)
                  example: "2025-05-01"
      responses:
        "201":
          description: 태스크 추가 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Task added successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Contents and from are required"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Not authenticated"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Not registered"
        "404":
          description: 플래너를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Planner not found"

  /api/task/update:
    post:
      tags:
        - 태스크
      summary: 태스크 수정
      description: 태스크를 수정합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 태스크 ID
                  example: 1
                contents:
                  type: string
                  description: 태스크 내용
                  example: "수학 문제집 P.45-50 풀기"
                priority:
                  type: integer
                  description: 우선순위
                  default: 1
                  example: 2
                from:
                  type: integer
                  description: 플래너 ID
                  example: 10
                startDate:
                  type: string
                  format: date
                  description: 시작일 (YYYY-MM-DD)
                  example: "2025-04-27"
                dueDate:
                  type: string
                  format: date
                  description: 마감일 (YYYY-MM-DD)
                  example: "2025-05-01"
                isCompleted:
                  type: integer
                  enum: [0, 1]
                  description: 완료 여부
                  example: 1
      responses:
        "200":
          description: 태스크 수정 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Task updated successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "(Data/ID) is required"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Not authenticated"
        "404":
          description: 태스크를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/task/delete:
    post:
      tags:
        - 태스크
      summary: 태스크 삭제
      description: 태스크를 삭제합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 태스크 ID
      responses:
        "200":
          description: 태스크 삭제 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Task deleted successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 태스크를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/task/complete:
    post:
      tags:
        - 태스크
      summary: 태스크 완료 처리
      description: 태스크를 완료 처리합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                  description: 태스크 ID
      responses:
        "200":
          description: 태스크 완료 처리 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Task completed successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 태스크를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/task/get:
    get:
      tags:
        - 태스크
      summary: 태스크 조회
      description: 모든 태스크 또는 특정 플래너 내의 태스크를 조회합니다.
      security:
        - cookieAuth: []
      parameters:
        - name: id
          in: query
          description: 플래너 ID (지정하지 않으면 모든 태스크 조회)
          schema:
            type: integer
      responses:
        "200":
          description: 태스크 조회 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plan"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: 플래너를 찾을 수 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # AI API
  /api/ai/getRoomList:
    get:
      tags:
        - 인공지능
      summary: 채팅방 목록 조회
      description: 사용자의 채팅방 목록을 조회합니다.
      security:
        - cookieAuth: []
      responses:
        "200":
          description: 채팅방 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - roomData
                properties:
                  roomData:
                    type: array
                    description: 채팅방 목록
                    items:
                      $ref: "#/components/schemas/ChatRoom"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/ai/addRoom:
    post:
      tags:
        - 인공지능
      summary: 채팅방 추가
      description: 새로운 채팅방을 추가합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: 채팅방 이름
                  example: "수학 과제 도움방"
      responses:
        "200":
          description: 채팅방 추가 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    example: "Room added successfully"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/ai/getChatInRoom:
    get:
      tags:
        - 인공지능
      summary: 채팅방 대화 내용 조회
      description: 특정 채팅방의 대화 내용을 조회합니다.
      security:
        - cookieAuth: []
      parameters:
        - name: from
          in: query
          description: 채팅방 ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: 채팅 내용 조회 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - chatData
                properties:
                  chatData:
                    type: array
                    description: 채팅 내용 목록
                    items:
                      $ref: "#/components/schemas/ChatMessage"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /api/ai/auto:
    post:
      tags:
        - 인공지능
      summary: 자동 AI 응답 생성
      description: 사용자가 제공한 프롬프트에 대한 자동 AI 모델 선택으로 응답을 생성하고, 채팅 내역에 저장합니다.
      security:
        - cookieAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - prompt
                - room
              properties:
                prompt:
                  type: string
                  description: AI에게 전달할 프롬프트
                  example: "내일 할 일에 대한 계획을 세워줄래?"
                room:
                  type: integer
                  description: 채팅방 ID
                  example: 1
      responses:
        "200":
          description: AI 응답 생성 성공
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                properties:
                  message:
                    type: string
                    description: AI 응답 메시지
                    example: "내일 할 일 계획: 1. 아침 7시 기상, 2. 8시부터 수학 과제 완성하기, 3. 점심 12시 - 친구들과 식사, 4. 오후 2시 - 영어 발표 준비, 5. 오후 5시 - 운동, 6. 저녁 8시 - 시험 준비, 7. 밤 11시 - 취침"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: 인증되지 않음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: 권한 없음
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: 서버 오류
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    User:
      type: object
      required:
        - id
        - email
        - profile_image
      properties:
        id:
          type: string
          description: 구글 계정 ID
          example: "123456789012345678901"
        name:
          type: string
          nullable: true
          description: 사용자 이름
          example: "홍길동"
        grade:
          type: integer
          nullable: true
          minimum: 1
          maximum: 3
          description: 학년 (1-3)
          example: 2
        class:
          type: integer
          nullable: true
          minimum: 1
          maximum: 6
          description: 반 (1-6)
          example: 3
        email:
          type: string
          format: email
          description: 이메일
          example: "user@example.com"
        profile_image:
          type: string
          format: uri
          description: 프로필 이미지 URL
          example: "https://lh3.googleusercontent.com/a/profile_image"

    Folder:
      type: object
      required:
        - owner
        - id
        - from
        - name
      properties:
        owner:
          type: string
          description: 사용자 ID
          example: "123456789012345678901"
        id:
          type: integer
          description: 폴더 ID
          example: 5
        from:
          type: integer
          description: 상위 폴더 ID (-1은 최상위)
          example: 0
        name:
          type: string
          description: 폴더 이름
          example: "학교 과제"

    Planner:
      type: object
      required:
        - owner
        - id
        - from
        - isDaily
        - name
      properties:
        owner:
          type: string
          description: 사용자 ID
          example: "123456789012345678901"
        id:
          type: integer
          description: 플래너 ID
          example: 10
        isDaily:
          type: integer
          enum: [0, 1]
          description: 일일 플래너 여부
          example: 1
        name:
          type: string
          description: 플래너 이름
          example: "수학 과제"

    Plan:
      type: object
      required:
        - owner
        - contents
        - from
        - isCompleted
        - id
        - priority
      properties:
        owner:
          type: string
          description: 사용자 ID
          example: "123456789012345678901"
        startDate:
          type: string
          format: date
          nullable: true
          description: 시작일
          example: "2025-04-27"
        dueDate:
          type: string
          format: date
          nullable: true
          description: 마감일
          example: "2025-05-01"
        contents:
          type: string
          description: 계획 내용
          example: "수학 문제집 P.45-50 풀기"
        from:
          type: integer
          description: 소속 플래너 ID
          example: 10
        isCompleted:
          type: integer
          enum: [0, 1]
          description: 완료 여부
          example: 0
        id:
          type: integer
          description: 계획 ID
          example: 15
        priority:
          type: integer
          description: 우선순위
          example: 2

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: 오류 메시지
          example: "Not authenticated"
        error:
          type: string
          description: 상세 오류 정보
          nullable: true
          example: "Error retrieving data: database connection failed"

    ChatRoom:
      type: object
      required:
        - owner
        - id
        - name
      properties:
        owner:
          type: string
          description: 사용자 ID
          example: "123456789012345678901"
        id:
          type: integer
          description: 채팅방 ID
          example: 1
        name:
          type: string
          description: 채팅방 이름
          example: "수학 과제 도움방"

    ChatMessage:
      type: object
      required:
        - owner
        - from
        - id
        - message
        - sender
      properties:
        owner:
          type: string
          description: 사용자 ID
          example: "123456789012345678901"
        from:
          type: integer
          description: 채팅방 ID
          example: 1
        id:
          type: integer
          description: 메시지 ID
          example: 10
        message:
          type: string
          description: 메시지 내용
          example: "안녕하세요, 수학 문제 질문이 있습니다."
        sender:
          type: string
          description: 메시지 발신자(user 또는 ai)
          enum: ["user", "ai"]
          example: "user"

  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: dimiplan.sid
      description: 세션 인증을 위한 쿠키
